FLAG("flushcache");
ADDI(REG_T2,REG_ZERO,0x1f0);
FLAG("flushloop");
CLFLUSH(REG_T2, 0);
ADDI(REG_T2, REG_T2, -16);
CBNZ(REG_T2, "flushloop");
CLFLUSH(REG_T2, 0);
RET();

FLAG("bitstream_readbits.part.0");
LH(REG_A6,REG_A1,8);
LH(REG_A4,REG_A1,0);
LH(REG_A2,REG_A1,4);
ADD(REG_A3,REG_A6,REG_A4);
LBU(REG_A5,REG_A3,0);
SLT(REG_T2,REG_A2,REG_A0);
CBZ(REG_T2,".L2");
ADDI(REG_SP,REG_SP,-16);
ADDI(REG_A3,REG_ZERO,16);
SUB(REG_A3,REG_A3,REG_A0);
SH(REG_S0,REG_SP,8);
SLLI(REG_A5,REG_A5,8);
SH(REG_RA,REG_SP,12);
ADDI(REG_A7,REG_ZERO,511);
SRL(REG_S0,REG_A5,REG_A3);
SUB(REG_A0,REG_A0,REG_A2);
SUB(REG_T2,REG_A4,REG_A7);
CBZ(REG_T2,".L11");
ADDI(REG_A4,REG_A4,1);
FLAG(".L4");
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A4,REG_A1,0);
SH(REG_A5,REG_A1,4);
CALL("bitstream_readbits.part.0");
LH(REG_RA,REG_SP,12);
OR(REG_A0,REG_S0,REG_A0);
LH(REG_S0,REG_SP,8);
ADDI(REG_SP,REG_SP,16);
BR(REG_RA);
FLAG(".L2");
SLL(REG_A4,REG_A5,REG_A0);
SB(REG_A4,REG_A3,0);
LH(REG_A4,REG_A1,4);
ADDI(REG_A3,REG_ZERO,8);
SUB(REG_A3,REG_A3,REG_A0);
SUB(REG_A4,REG_A4,REG_A0);
SH(REG_A4,REG_A1,4);
SRA(REG_A0,REG_A5,REG_A3);
RET();
FLAG(".L11");
LH(REG_A5,REG_A1,12);
SH(REG_A6,REG_A1,12);
SH(REG_A5,REG_A1,8);
ADDI(REG_A5,REG_ZERO,66);
WSRH(REG_A6,REG_A5,0);
ADDI(REG_A4,REG_ZERO,0);
B(".L4");

FLAG("bitstream_init");
ADDI(REG_A5,REG_ZERO,512);
ADDI(REG_A4,REG_ZERO,8);
SH(REG_A4,REG_A1,4);
SH(REG_ZERO,REG_A1,0);
SH(REG_ZERO,REG_A1,8);
SH(REG_A5,REG_A1,12);
ADDI(REG_A3,REG_ZERO,64);
LI(REG_A4,4096);
WSRH(REG_A4,REG_A3,0);
ADDI(REG_A4,REG_ZERO,66);
ADDI(REG_A3,REG_ZERO,0);
WSRH(REG_A3,REG_A4,0);
WSRH(REG_A5,REG_A4,0);
RET();

FLAG("bitstream_swapin");
LH(REG_A4,REG_A0,12);
LH(REG_A5,REG_A0,8);
SH(REG_A4,REG_A0,8);
SH(REG_A5,REG_A0,12);
ADDI(REG_A4,REG_ZERO,66);
WSRH(REG_A5,REG_A4,0);
RET();

FLAG("bitstream_prepare");
LH(REG_A5,REG_A0,0);
ADDI(REG_A4,REG_ZERO,511);
SUB(REG_T2,REG_A5,REG_A4);
CBZ(REG_T2,".L18");
ADDI(REG_A5,REG_A5,1);
SH(REG_A5,REG_A0,0);
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A5,REG_A0,4);
RET();
FLAG(".L18");
LH(REG_A4,REG_A0,12);
LH(REG_A5,REG_A0,8);
SH(REG_A4,REG_A0,8);
SH(REG_A5,REG_A0,12);
ADDI(REG_A4,REG_ZERO,66);
WSRH(REG_A5,REG_A4,0);
ADDI(REG_A5,REG_ZERO,0);
SH(REG_A5,REG_A0,0);
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A5,REG_A0,4);
RET();

FLAG("bitstream_readbits");
CBZ(REG_A0,".L24");
LH(REG_A6,REG_A1,8);
LH(REG_A4,REG_A1,0);
LH(REG_A2,REG_A1,4);
ADD(REG_A3,REG_A6,REG_A4);
LBU(REG_A5,REG_A3,0);
SLT(REG_T2,REG_A2,REG_A0);
CBZ(REG_T2,".L21");
ADDI(REG_SP,REG_SP,-16);
ADDI(REG_A3,REG_ZERO,16);
SUB(REG_A3,REG_A3,REG_A0);
SH(REG_S0,REG_SP,8);
SLLI(REG_A5,REG_A5,8);
SH(REG_RA,REG_SP,12);
ADDI(REG_A7,REG_ZERO,511);
SRL(REG_S0,REG_A5,REG_A3);
SUB(REG_A0,REG_A0,REG_A2);
SUB(REG_T2,REG_A4,REG_A7);
CBZ(REG_T2,".L29");
ADDI(REG_A4,REG_A4,1);
FLAG(".L23");
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A4,REG_A1,0);
SH(REG_A5,REG_A1,4);
CALL("bitstream_readbits.part.0");
LH(REG_RA,REG_SP,12);
OR(REG_A0,REG_S0,REG_A0);
LH(REG_S0,REG_SP,8);
ADDI(REG_SP,REG_SP,16);
BR(REG_RA);
FLAG(".L21");
SLL(REG_A4,REG_A5,REG_A0);
SB(REG_A4,REG_A3,0);
LH(REG_A4,REG_A1,4);
ADDI(REG_A3,REG_ZERO,8);
SUB(REG_A3,REG_A3,REG_A0);
SUB(REG_A4,REG_A4,REG_A0);
SH(REG_A4,REG_A1,4);
SRA(REG_A0,REG_A5,REG_A3);
RET();
FLAG(".L24");
ADDI(REG_A0,REG_ZERO,0);
RET();
FLAG(".L29");
LH(REG_A5,REG_A1,12);
SH(REG_A6,REG_A1,12);
SH(REG_A5,REG_A1,8);
ADDI(REG_A5,REG_ZERO,66);
WSRH(REG_A6,REG_A5,0);
ADDI(REG_A4,REG_ZERO,0);
B(".L23");

FLAG("bitstream_readunary");
LH(REG_A1,REG_A0,8);
LH(REG_A4,REG_A0,0);
ADD(REG_A5,REG_A0,REG_ZERO);
ADD(REG_A3,REG_A1,REG_A4);
LBU(REG_A2,REG_A3,0);
CBNZ(REG_A2,".L35");
LH(REG_A0,REG_A0,4);
ADDI(REG_A6,REG_ZERO,0);
ADDI(REG_T1,REG_ZERO,511);
ADDI(REG_A7,REG_ZERO,8);
FLAG(".L34");
SUB(REG_T2,REG_A4,REG_T1);
CBZ(REG_T2,".L38");
LH(REG_A1,REG_A5,8);
ADDI(REG_A4,REG_A4,1);
SH(REG_A4,REG_A5,0);
ADD(REG_A3,REG_A1,REG_A4);
FLAG(".L33");
SH(REG_A7,REG_A5,4);
LBU(REG_A2,REG_A3,0);
ADD(REG_A6,REG_A6,REG_A0);
ADDI(REG_A0,REG_ZERO,8);
CBZ(REG_A2,".L34");
FLAG(".L31");
CLZ(REG_A0,REG_A2);
ADDI(REG_A1,REG_A0,-7);
SLL(REG_A2,REG_A2,REG_A1);
SB(REG_A2,REG_A3,0);
LH(REG_A4,REG_A5,4);
ADDI(REG_A0,REG_A0,-8);
ADD(REG_A0,REG_A0,REG_A6);
SUB(REG_A4,REG_A4,REG_A1);
SH(REG_A4,REG_A5,4);
RET();
FLAG(".L38");
LH(REG_A3,REG_A5,12);
SH(REG_A1,REG_A5,12);
SH(REG_A3,REG_A5,8);
ADDI(REG_T2,REG_ZERO,66);
WSRH(REG_A1,REG_T2,0);
ADDI(REG_A4,REG_ZERO,0);
SH(REG_ZERO,REG_A5,0);
ADD(REG_A1,REG_A3,REG_ZERO);
B(".L33");
FLAG(".L35");
ADDI(REG_A6,REG_ZERO,0);
B(".L31");

FLAG("bitstream_readrice");
ADDI(REG_SP,REG_SP,-32);
SH(REG_S0,REG_SP,24);
ADD(REG_S0,REG_A0,REG_ZERO);
ADD(REG_A0,REG_A1,REG_ZERO);
SH(REG_S1,REG_SP,20);
SH(REG_RA,REG_SP,28);
ADD(REG_S1,REG_A1,REG_ZERO);
CALL("bitstream_readunary");
ADD(REG_A5,REG_A0,REG_ZERO);
CBNZ(REG_S0,".L40");
LH(REG_RA,REG_SP,28);
LH(REG_S0,REG_SP,24);
ANDI(REG_A4,REG_A0,1);
SUB(REG_A4,REG_ZERO,REG_A4);
SRAI(REG_A0,REG_A0,1);
XOR(REG_A0,REG_A4,REG_A0);
LH(REG_S1,REG_SP,20);
SRAI(REG_A1,REG_A0,15);
ADDI(REG_SP,REG_SP,32);
BR(REG_RA);
FLAG(".L40");
ADDI(REG_A0,REG_S0,-1);
SLL(REG_S0,REG_A5,REG_A0);
CBZ(REG_A0,".L42");
ADD(REG_A1,REG_S1,REG_ZERO);
CALL("bitstream_readbits.part.0");
OR(REG_S0,REG_S0,REG_A0);
FLAG(".L42");
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_ZERO,1);
CALL("bitstream_readbits.part.0");
SUB(REG_A1,REG_ZERO,REG_A0);
LH(REG_RA,REG_SP,28);
XOR(REG_A0,REG_A1,REG_S0);
LH(REG_S0,REG_SP,24);
LH(REG_S1,REG_SP,20);
ADDI(REG_SP,REG_SP,32);
BR(REG_RA);

FLAG("bitstream_align");
LH(REG_A4,REG_A0,4);
ADDI(REG_A5,REG_ZERO,8);
SUB(REG_T2,REG_A4,REG_A5);
CBZ(REG_T2,".L47");
LH(REG_A5,REG_A0,0);
ADDI(REG_A4,REG_ZERO,511);
SUB(REG_T2,REG_A5,REG_A4);
CBZ(REG_T2,".L51");
ADDI(REG_A5,REG_A5,1);
FLAG(".L50");
SH(REG_A5,REG_A0,0);
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A5,REG_A0,4);
FLAG(".L47");
RET();
FLAG(".L51");
LH(REG_A4,REG_A0,12);
LH(REG_A5,REG_A0,8);
SH(REG_A4,REG_A0,8);
SH(REG_A5,REG_A0,12);
ADDI(REG_A4,REG_ZERO,66);
WSRH(REG_A5,REG_A4,0);
ADDI(REG_A5,REG_ZERO,0);
B(".L50");

FLAG("bitstream_alignread");
LH(REG_A5,REG_A1,8);
LH(REG_A3,REG_A1,0);
ADDI(REG_A4,REG_ZERO,511);
ADD(REG_A5,REG_A5,REG_A3);
LBU(REG_A5,REG_A5,0);
SB(REG_A5,REG_A0,0);
LH(REG_A5,REG_A1,0);
SUB(REG_T2,REG_A5,REG_A4);
CBZ(REG_T2,".L55");
ADDI(REG_A5,REG_A5,1);
SH(REG_A5,REG_A1,0);
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A5,REG_A1,4);
RET();
FLAG(".L55");
LH(REG_A4,REG_A1,12);
LH(REG_A5,REG_A1,8);
SH(REG_A4,REG_A1,8);
SH(REG_A5,REG_A1,12);
ADDI(REG_A4,REG_ZERO,66);
WSRH(REG_A5,REG_A4,0);
ADDI(REG_A5,REG_ZERO,0);
SH(REG_A5,REG_A1,0);
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A5,REG_A1,4);
RET();

FLAG("bitstream_alignpass");
LH(REG_A5,REG_A0,0);
ADDI(REG_A4,REG_ZERO,511);
SUB(REG_T2,REG_A5,REG_A4);
CBZ(REG_T2,".L59");
ADDI(REG_A5,REG_A5,1);
SH(REG_A5,REG_A0,0);
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A5,REG_A0,4);
RET();
FLAG(".L59");
LH(REG_A4,REG_A0,12);
LH(REG_A5,REG_A0,8);
SH(REG_A4,REG_A0,8);
SH(REG_A5,REG_A0,12);
ADDI(REG_A4,REG_ZERO,66);
WSRH(REG_A5,REG_A4,0);
ADDI(REG_A5,REG_ZERO,0);
SH(REG_A5,REG_A0,0);
ADDI(REG_A5,REG_ZERO,8);
SH(REG_A5,REG_A0,4);
RET();

FLAG("write_residuals");
LH(REG_A5,REG_A1,0);
ADDI(REG_SP,REG_SP,-16);
//WSRH(REG_A2,REG_ZERO,80);//input.l
//WSRH(REG_A3,REG_ZERO,81);//input.h
//ADDI(REG_T2,REG_ZERO,1);
//WSRH(REG_T2,REG_ZERO,82);
CBNZ(REG_A3,".L66"); //input.h != 0
CBLT(REG_A2,".L64"); //input.l < 0 && input.h == 0
FLAG(".L63");
ADDI(REG_A4,REG_A5,1);
LEA(REG_A5,REG_A0,REG_A5,1);
SH(REG_A2,REG_A5,0);
SH(REG_A4,REG_A1,0);
ADDI(REG_SP,REG_SP,16);
BR(REG_RA);
FLAG(".L66");//input.h != 0
ADDI(REG_A4,REG_ZERO,-1);
SUB(REG_T2,REG_A2,REG_A4);
CBZ(REG_T2,".L64");//input.l == -1
//CBZ(REG_T2,"minusone");//input.l == -1
CBLT(REG_A2,".L63");//input.l < 0
FLAG(".L64");
//WSRH(REG_ZERO,REG_ZERO,84);//indicator the error status
//FLAG("minusone");
ADDI(REG_A3,REG_ZERO,-1);
LEA(REG_A4,REG_A0,REG_A5,1);
ADDI(REG_A5,REG_A5,1);
SH(REG_A3,REG_A4,0);
ADDI(REG_A4,REG_A5,1);
LEA(REG_A5,REG_A0,REG_A5,1);
SH(REG_A2,REG_A5,0);
SH(REG_A4,REG_A1,0);
ADDI(REG_SP,REG_SP,16);
BR(REG_RA);

FLAG("decode_residuals");
ADDI(REG_SP,REG_SP,-80);
SH(REG_S1,REG_SP,68);
SH(REG_S6,REG_SP,48);
ADD(REG_S1,REG_A0,REG_ZERO);
ADD(REG_S6,REG_A1,REG_ZERO);
ADDI(REG_A0,REG_ZERO,2);
ADD(REG_A1,REG_A3,REG_ZERO);
SH(REG_RA,REG_SP,76);
SH(REG_S2,REG_SP,64);
SH(REG_S4,REG_SP,56);
ADD(REG_S2,REG_A3,REG_ZERO);
SH(REG_S7,REG_SP,44);
ADD(REG_S4,REG_A2,REG_ZERO);
SH(REG_S0,REG_SP,72);
SH(REG_S3,REG_SP,60);
SH(REG_S5,REG_SP,52);
SH(REG_S8,REG_SP,40);
CALL("bitstream_readbits.part.0");
ADD(REG_A1,REG_S2,REG_ZERO);
ADDI(REG_A0,REG_ZERO,4);
CALL("bitstream_readbits.part.0");
ADDI(REG_S7,REG_ZERO,1);
SLL(REG_S7,REG_S7,REG_A0);
SH(REG_ZERO,REG_SP,12);
SRA(REG_S6,REG_S6,REG_A0);
CBLE(REG_S7,".L68");
ADD(REG_A1,REG_S2,REG_ZERO);
ADDI(REG_A0,REG_ZERO,4);
CALL("bitstream_readbits.part.0");
ADDI(REG_S8,REG_ZERO,14);
SUB(REG_S1,REG_S6,REG_S1);
ADDI(REG_S5,REG_ZERO,0);
ADD(REG_S3,REG_A0,REG_ZERO);
SLT(REG_T2,REG_S8,REG_A0);
CBNZ(REG_T2,".L69");
FLAG(".L78");
CBLE(REG_S1,".L70");
ADDI(REG_S0,REG_ZERO,0);
FLAG(".L71");
ADD(REG_A1,REG_S2,REG_ZERO);
ADD(REG_A0,REG_S3,REG_ZERO);
CALL("bitstream_readrice");
ADD(REG_A2,REG_A0,REG_ZERO);
ADD(REG_A3,REG_A1,REG_ZERO);
ADDI(REG_S0,REG_S0,1);
ADDI(REG_A1,REG_SP,12);
ADD(REG_A0,REG_S4,REG_ZERO);
CALL("write_residuals");
SUB(REG_T2,REG_S1,REG_S0);
CBNZ(REG_T2,".L71");
FLAG(".L70");
ADDI(REG_S5,REG_S5,1);
SUB(REG_T2,REG_S7,REG_S5);
CBZ(REG_T2,".L68");
FLAG(".L74");
ADD(REG_A1,REG_S2,REG_ZERO);
ADDI(REG_A0,REG_ZERO,4);
CALL("bitstream_readbits.part.0");
ADD(REG_S1,REG_S6,REG_ZERO);
ADD(REG_S3,REG_A0,REG_ZERO);
SLT(REG_T2,REG_S8,REG_A0);
CBZ(REG_T2,".L78");
FLAG(".L69");
ADD(REG_A1,REG_S2,REG_ZERO);
ADDI(REG_A0,REG_ZERO,5);
CALL("bitstream_readbits.part.0");
ADD(REG_S3,REG_A0,REG_ZERO);
CBLE(REG_S1,".L70");
ADDI(REG_S0,REG_ZERO,0);
FLAG(".L72");
ADD(REG_A1,REG_S2,REG_ZERO);
ADD(REG_A0,REG_S3,REG_ZERO);
CALL("bitstream_readrice");
ADD(REG_A2,REG_A0,REG_ZERO);
ADD(REG_A3,REG_A1,REG_ZERO);
ADDI(REG_S0,REG_S0,1);
ADDI(REG_A1,REG_SP,12);
ADD(REG_A0,REG_S4,REG_ZERO);
CALL("write_residuals");
SUB(REG_T2,REG_S1,REG_S0);
CBNZ(REG_T2,".L72");
ADDI(REG_S5,REG_S5,1);
SUB(REG_T2,REG_S7,REG_S5);
CBNZ(REG_T2,".L74");
FLAG(".L68");
LH(REG_RA,REG_SP,76);
LH(REG_S0,REG_SP,72);
LH(REG_S1,REG_SP,68);
LH(REG_S2,REG_SP,64);
LH(REG_S3,REG_SP,60);
LH(REG_S4,REG_SP,56);
LH(REG_S5,REG_SP,52);
LH(REG_S6,REG_SP,48);
LH(REG_S7,REG_SP,44);
LH(REG_S8,REG_SP,40);
ADDI(REG_A0,REG_ZERO,0);
ADDI(REG_SP,REG_SP,80);
BR(REG_RA);

FLAG("decodesubframe");
ADDI(REG_SP,REG_SP,-64);
SH(REG_S2,REG_SP,48);
SH(REG_S4,REG_SP,40);
ADD(REG_S2,REG_A1,REG_ZERO);
ADD(REG_S4,REG_A0,REG_ZERO);
ADD(REG_A1,REG_A3,REG_ZERO);
ADDI(REG_A0,REG_ZERO,8);
SH(REG_S0,REG_SP,56);
SH(REG_S1,REG_SP,52);
SH(REG_S3,REG_SP,44);
SH(REG_S5,REG_SP,36);
SH(REG_RA,REG_SP,60);
SH(REG_S6,REG_SP,32);
SH(REG_S7,REG_SP,28);
SH(REG_S8,REG_SP,24);
SH(REG_S9,REG_SP,20);
ADD(REG_S0,REG_A3,REG_ZERO);
ADD(REG_S3,REG_A2,REG_ZERO);
CALL("bitstream_readbits.part.0");
ANDI(REG_S1,REG_A0,1);
SRAI(REG_S5,REG_A0,1);
CBZ(REG_S1,".L81");
ADDI(REG_S1,REG_ZERO,1);
B(".L80");
FLAG(".L82");
ADDI(REG_S1,REG_S1,1);
FLAG(".L80");
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,1);
CALL("bitstream_readbits.part.0");
CBZ(REG_A0,".L82");
SUB(REG_S2,REG_S2,REG_S1);
FLAG(".L81");
ADDI(REG_A5,REG_ZERO,41);
WSRH(REG_S1,REG_A5,0);
CBNZ(REG_S5,".L83");
ADDI(REG_A5,REG_ZERO,16);
SLT(REG_T2,REG_A5,REG_S2);
CBNZ(REG_T2,".L121");
CBZ(REG_S2,".L106");
ADD(REG_A1,REG_S0,REG_ZERO);
ADD(REG_A0,REG_S2,REG_ZERO);
CALL("bitstream_readbits.part.0");
SRLI(REG_S0,REG_A0,15);//x.h = x.l < 0 ? -1 : 0;
FLAG(".L85");
ADDI(REG_A5,REG_ZERO,32);
ADD(REG_T4,REG_A0,REG_ZERO);//workaround
ADD(REG_T5,REG_S0,REG_ZERO);
WSRW(REG_T4,REG_A5,0);//const issue
FLAG(".L90");
ADDI(REG_A0,REG_ZERO,0);
FLAG(".L79");
LH(REG_RA,REG_SP,60);
LH(REG_S0,REG_SP,56);
LH(REG_S1,REG_SP,52);
LH(REG_S2,REG_SP,48);
LH(REG_S3,REG_SP,44);
LH(REG_S4,REG_SP,40);
LH(REG_S5,REG_SP,36);
LH(REG_S6,REG_SP,32);
LH(REG_S7,REG_SP,28);
LH(REG_S8,REG_SP,24);
LH(REG_S9,REG_SP,20);
ADDI(REG_SP,REG_SP,64);
BR(REG_RA);
FLAG(".L83");
ADDI(REG_A5,REG_ZERO,1);
SUB(REG_T2,REG_S5,REG_A5);
CBZ(REG_T2,".L122");
ADDI(REG_A5,REG_S5,-8);
ADDI(REG_A4,REG_ZERO,4);
SLTU(REG_T2,REG_A4,REG_A5);
CBZ(REG_T2,".L123");
ADDI(REG_A5,REG_S5,-32);
ADDI(REG_A4,REG_ZERO,31);
SLTU(REG_T2,REG_A4,REG_A5);
CBNZ(REG_T2,".L110");
ANDI(REG_S5,REG_S5,31);
ADDI(REG_S6,REG_S5,1);
ADDI(REG_A5,REG_ZERO,38);
WSRH(REG_S5,REG_A5,0);
ADDI(REG_S9,REG_ZERO,0);
ADDI(REG_S8,REG_S2,-1);
SLLI(REG_S5,REG_S6,1);
ADDI(REG_S7,REG_ZERO,40);
B(".L102");
FLAG(".L125");
CALL("bitstream_readbits.part.0");
SUB(REG_A5,REG_ZERO,REG_S1);
SLL(REG_A5,REG_A5,REG_S8);
OR(REG_A0,REG_A5,REG_A0);
ADD(REG_T4,REG_A0,REG_ZERO);
ADD(REG_S1,REG_S9,REG_S1);
ADD(REG_T5,REG_S1,REG_ZERO);
WSRW(REG_T4,REG_S7,0);
ADDI(REG_S9,REG_S9,2);
SUB(REG_T2,REG_S9,REG_S5);
CBZ(REG_T2,".L124");
FLAG(".L102");
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,1);
CALL("bitstream_readbits.part.0");
ADDI(REG_A5,REG_ZERO,1);
ADD(REG_S1,REG_A0,REG_ZERO);
ADD(REG_A1,REG_S0,REG_ZERO);
ADD(REG_A0,REG_S8,REG_ZERO);
SUB(REG_T2,REG_S2,REG_A5);
CBNZ(REG_T2,".L125");
SUB(REG_A5,REG_ZERO,REG_S1);
SLL(REG_A5,REG_A5,REG_S8);
ADDI(REG_A0,REG_ZERO,0);
OR(REG_A0,REG_A5,REG_A0);
ADD(REG_T4,REG_A0,REG_ZERO);
ADD(REG_S1,REG_S9,REG_S1);
ADD(REG_T5,REG_S1,REG_ZERO);
WSRW(REG_T4,REG_S7,0);
ADDI(REG_S9,REG_S9,2);
SUB(REG_T2,REG_S9,REG_S5);
CBNZ(REG_T2,".L102");
FLAG(".L124");
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,4);
CALL("bitstream_readbits.part.0");
ADD(REG_S7,REG_A0,REG_ZERO);
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,5);
CALL("bitstream_readbits.part.0");
ADDI(REG_A5,REG_ZERO,37);
WSRH(REG_A0,REG_A5,0);
ADDI(REG_S2,REG_ZERO,0);
ADDI(REG_S8,REG_ZERO,39);
FLAG(".L104");
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,1);
CALL("bitstream_readbits.part.0");
ADD(REG_S1,REG_A0,REG_ZERO);
SUB(REG_S1,REG_ZERO,REG_S1);
ADD(REG_A1,REG_S0,REG_ZERO);
ADD(REG_A0,REG_S7,REG_ZERO);
SLL(REG_S1,REG_S1,REG_S7);
CBZ(REG_S7,".L103");
CALL("bitstream_readbits.part.0");
OR(REG_S1,REG_S1,REG_A0);
FLAG(".L103");
ADD(REG_T4,REG_S1,REG_ZERO);
ADD(REG_T5,REG_S2,REG_ZERO);
WSRW(REG_T4,REG_S8,0);
ADDI(REG_S2,REG_S2,2);
SUB(REG_T2,REG_S2,REG_S5);
CBNZ(REG_T2,".L104");
LI(REG_A5,4096);
LEA(REG_S1,REG_S3,REG_S3,3);
SLLI(REG_S1,REG_S1,11);
ADD(REG_S1,REG_S1,REG_A5);
ADD(REG_A3,REG_S0,REG_ZERO);
ADD(REG_A2,REG_S1,REG_ZERO);
ADD(REG_A1,REG_S4,REG_ZERO);
ADD(REG_A0,REG_S6,REG_ZERO);
CALL("decode_residuals");
CALL("flushcache");
ADDI(REG_A5,REG_ZERO,34);
WSRH(REG_S1,REG_A5,0);
B(".L90");
FLAG(".L122");
LI(REG_A5,4096);
LEA(REG_S3,REG_S3,REG_S3,3);
SH(REG_ZERO,REG_SP,4);
SLLI(REG_S3,REG_S3,11);
ADD(REG_S3,REG_S3,REG_A5);
CBLE(REG_S4,".L94");
ADDI(REG_S1,REG_ZERO,0);
ADDI(REG_S5,REG_ZERO,16);
ADDI(REG_S6,REG_S2,-16);
FLAG(".L89");
ADD(REG_A1,REG_S0,REG_ZERO);
ADD(REG_A0,REG_S2,REG_ZERO);
SLT(REG_T2,REG_S5,REG_S2);
CBNZ(REG_T2,".L126");
CBZ(REG_S2,".L108");
CALL("bitstream_readbits.part.0");
ADD(REG_A2,REG_A0,REG_ZERO);
SRAI(REG_A5,REG_A0,15);
FLAG(".L93");
SH(REG_A5,REG_SP,12);
FLAG(".L92");
LH(REG_A3,REG_SP,12);
ADDI(REG_S1,REG_S1,1);
ADDI(REG_A1,REG_SP,4);
ADD(REG_A0,REG_S3,REG_ZERO);
SH(REG_A2,REG_SP,8);
CALL("write_residuals");
SUB(REG_T2,REG_S4,REG_S1);
CBNZ(REG_T2,".L89");
FLAG(".L94");
CALL("flushcache");
ADDI(REG_A5,REG_ZERO,33);
WSRH(REG_S3,REG_A5,0);
B(".L90");
FLAG(".L123");
LI(REG_A5,4096);
LEA(REG_S3,REG_S3,REG_S3,3);
ANDI(REG_S5,REG_S5,7);
SLLI(REG_S3,REG_S3,11);
ADD(REG_S3,REG_S3,REG_A5);
CBNZ(REG_S5,".L96");
ADD(REG_A3,REG_S0,REG_ZERO);
ADD(REG_A2,REG_S3,REG_ZERO);
ADD(REG_A1,REG_S4,REG_ZERO);
ADDI(REG_A0,REG_ZERO,0);
CALL("decode_residuals");
ADDI(REG_A5,REG_ZERO,33);
FLAG(".L97");
CALL("flushcache");
WSRH(REG_S3,REG_A5,0);
B(".L90");
FLAG(".L121");
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_S2,-1);
CALL("bitstream_readbits.part.0");
ADD(REG_A5,REG_A0,REG_ZERO);
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,16);
ADD(REG_S0,REG_A5,REG_ZERO);
CALL("bitstream_readbits.part.0");
B(".L85");
FLAG(".L126");
ADD(REG_A0,REG_S6,REG_ZERO);
CALL("bitstream_readbits.part.0");
ADD(REG_A5,REG_A0,REG_ZERO);
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,16);
SH(REG_A5,REG_SP,12);
CALL("bitstream_readbits.part.0");
ADD(REG_A2,REG_A0,REG_ZERO);
B(".L92");
FLAG(".L108");
ADDI(REG_A2,REG_ZERO,0);
ADDI(REG_A5,REG_ZERO,0);
B(".L93");
FLAG(".L106");
ADDI(REG_S0,REG_ZERO,0);
ADDI(REG_A0,REG_ZERO,0);
B(".L85");
FLAG(".L96");
ADDI(REG_A5,REG_S5,-1);
ADDI(REG_A4,REG_ZERO,38);
WSRH(REG_A5,REG_A4,0);
ADDI(REG_S9,REG_ZERO,0);
ADDI(REG_S8,REG_S2,-1);
SLLI(REG_S6,REG_S5,1);
ADDI(REG_S7,REG_ZERO,40);
FLAG(".L99");
ADD(REG_A1,REG_S0,REG_ZERO);
ADDI(REG_A0,REG_ZERO,1);
CALL("bitstream_readbits.part.0");
ADD(REG_S1,REG_A0,REG_ZERO);
ADDI(REG_S1,REG_S1,-1);
ADDI(REG_A5,REG_ZERO,1);
ADD(REG_A1,REG_S0,REG_ZERO);
ADD(REG_A0,REG_S8,REG_ZERO);
SLTUI(REG_S1,REG_S1,1);
SUB(REG_T2,REG_S2,REG_A5);
CBZ(REG_T2,".L109");
CALL("bitstream_readbits.part.0");
FLAG(".L98");
SUB(REG_A5,REG_ZERO,REG_S1);
SLL(REG_A5,REG_A5,REG_S8);
OR(REG_A5,REG_A5,REG_A0);
ADD(REG_T4,REG_A5,REG_ZERO);
ADD(REG_S1,REG_S9,REG_S1);
ADD(REG_T5,REG_S1,REG_ZERO);
WSRW(REG_T4,REG_S7,0);
ADDI(REG_S9,REG_S9,2);
SUB(REG_T2,REG_S9,REG_S6);
CBNZ(REG_T2,".L99");
SLLI(REG_A1,REG_S5,3);
ADDI(REG_A5,REG_ZERO,0);
ADDI(REG_A4,REG_ZERO,37);
WSRH(REG_A5,REG_A4,0);
LI(REG_A2,GLOBAL_LANCHOR);
ADDI(REG_A3,REG_ZERO,39);
FLAG(".L100");
ADD(REG_A4,REG_A5,REG_A1);
ADD(REG_A4,REG_A2,REG_A4); //a2 = coefs[s5][a1]
LH(REG_A4,REG_A4,0);
WSRW(REG_A4,REG_A3,0);
ADDI(REG_A5,REG_A5,2);
SUB(REG_T2,REG_A5,REG_S6);
CBNZ(REG_T2,".L100");
ADD(REG_A3,REG_S0,REG_ZERO);
ADD(REG_A2,REG_S3,REG_ZERO);
ADD(REG_A1,REG_S4,REG_ZERO);
ADD(REG_A0,REG_S5,REG_ZERO);
CALL("decode_residuals");
ADDI(REG_A5,REG_ZERO,34);
B(".L97");
FLAG(".L109");
ADDI(REG_A0,REG_ZERO,0);
B(".L98");
FLAG(".L110");
//debug decodesubframe
ADDI(REG_A0,REG_ZERO,-1);
B(".L79");

FLAG("decodeframe");
ADDI(REG_SP,REG_SP,-48);
SH(REG_RA,REG_SP,44);
SH(REG_S0,REG_SP,40);
SH(REG_S1,REG_SP,36);
SH(REG_S2,REG_SP,32);
SH(REG_S3,REG_SP,28);
SH(REG_S4,REG_SP,24);
ADD(REG_S1,REG_A0,REG_ZERO);
ADD(REG_A1,REG_A0,REG_ZERO);
ADDI(REG_A0,REG_SP,12);
CALL("bitstream_alignread");
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_SP,13);
CALL("bitstream_alignread");
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_SP,14);
CALL("bitstream_alignread");
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_SP,15);
CALL("bitstream_alignread");
ADDI(REG_A3,REG_ZERO,-769);
LH(REG_A4,REG_SP,12);
ADDI(REG_A5,REG_ZERO,-1793);
AND(REG_A4,REG_A4,REG_A3);
SUB(REG_T2,REG_A4,REG_A5);
CBNZ(REG_T2,".L198");
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_SP,11);
CALL("bitstream_alignread");
LBU(REG_S0,REG_SP,11);
ADDI(REG_A5,REG_ZERO,191);
SLTU(REG_T2,REG_A5,REG_S0);
CBZ(REG_T2,".L190");
ADDI(REG_S2,REG_ZERO,191);
FLAG(".L191");
ADD(REG_A0,REG_S1,REG_ZERO);
CALL("bitstream_prepare");
SLLI(REG_S0,REG_S0,1);
ANDI(REG_S0,REG_S0,0xff);
SB(REG_S0,REG_SP,11);
SLTU(REG_T2,REG_S2,REG_S0);
CBNZ(REG_T2,".L191");
FLAG(".L190");
LBU(REG_A4,REG_SP,14);
SRLI(REG_A5,REG_A4,4); //a5 = blocksizecode
ADD(REG_A2,REG_A5,REG_ZERO); //a2 = blocksizecode
ANDI(REG_S0,REG_A4,15);
LBU(REG_A4,REG_SP,15);
SRLI(REG_S2,REG_A4,4);
ANDI(REG_S4,REG_A4,15);
ADDI(REG_A4,REG_ZERO,1);
SUB(REG_T2,REG_A5,REG_A4);
CBZ(REG_T2,".L199"); //blocksize == 1
ADDI(REG_A4,REG_A5,-2); //a4 = blocksizecode - 2
ADDI(REG_A3,REG_ZERO,3); //a3 = 3
SLTU(REG_T2,REG_A3,REG_A4);
CBNZ(REG_T2,".L193"); //blocksizecode > 5
ADDI(REG_S3,REG_ZERO,576);
SLL(REG_S3,REG_S3,REG_A4); //blocksize = 576 << (blocksizecode - 2);
FLAG(".L192");
ADD(REG_A0,REG_S1,REG_ZERO);
CALL("bitstream_prepare");
ADDI(REG_A5,REG_ZERO,10);
SUB(REG_T2,REG_S0,REG_A5);
CBNZ(REG_T2,".L1101");
ADDI(REG_A5,REG_ZERO,9);
SUB(REG_T2,REG_S2,REG_A5);
CBZ(REG_T2,".L1102");
SLTU(REG_T2,REG_A5,REG_S2);
CBNZ(REG_T2,".L197");
ADDI(REG_A5,REG_ZERO,1);
SUB(REG_T2,REG_S2,REG_A5);
CBZ(REG_T2,".L1103");
ADDI(REG_A5,REG_ZERO,8);
ADDI(REG_S0,REG_ZERO,1);
SUB(REG_T2,REG_S2,REG_A5);
CBNZ(REG_T2,".L1111");
FLAG(".L196");
ADDI(REG_A5,REG_ZERO,8);
SUB(REG_T2,REG_S4,REG_A5);
CBNZ(REG_T2,".L1106");
ADDI(REG_A5,REG_ZERO,35);
WSRH(REG_S3,REG_A5,0);
ADDI(REG_A5,REG_ZERO,36);
WSRH(REG_S0,REG_A5,0);
ADDI(REG_A1,REG_S0,-2);
SLTUI(REG_A1,REG_A1,1);
ADD(REG_A3,REG_S1,REG_ZERO);
ADDI(REG_A2,REG_ZERO,0);
ADDI(REG_A1,REG_A1,16);
ADD(REG_A0,REG_S3,REG_ZERO);
CALL("decodesubframe");
CBNZ(REG_A0,".L1107");
ANDI(REG_A1,REG_S0,1);
ADD(REG_A3,REG_S1,REG_ZERO);
ADDI(REG_A2,REG_ZERO,1);
ADDI(REG_A1,REG_A1,16);
ADD(REG_A0,REG_S3,REG_ZERO);
CALL("decodesubframe");
ADD(REG_S0,REG_A0,REG_ZERO);
CBNZ(REG_A0,".L1108");
ADD(REG_A0,REG_S1,REG_ZERO);
CALL("bitstream_align");
ADD(REG_A0,REG_S1,REG_ZERO);
CALL("bitstream_prepare");
ADD(REG_A0,REG_S1,REG_ZERO);
CALL("bitstream_prepare");
FLAG(".L188");
ADD(REG_A0,REG_S0,REG_ZERO);
LH(REG_RA,REG_SP,44);
LH(REG_S0,REG_SP,40);
LH(REG_S1,REG_SP,36);
LH(REG_S2,REG_SP,32);
LH(REG_S3,REG_SP,28);
LH(REG_S4,REG_SP,24);
ADDI(REG_SP,REG_SP,48);
BR(REG_RA);
FLAG(".L193");
ADDI(REG_A4,REG_A5,-8); //a4 = blocksizecode - 8
ADDI(REG_A3,REG_ZERO,7); //a3 = 7
SLTU(REG_T2,REG_A3,REG_A4);
CBNZ(REG_T2,".L194");
ADDI(REG_S3,REG_ZERO,256);
SLL(REG_S3,REG_S3,REG_A4);
B(".L192");
FLAG(".L194"); //blocksizecode > 5
//a4 = blocksizecode - 2, a2 = blocksizecode
ADDI(REG_A5,REG_ZERO,6); //a5 = 6
SUB(REG_T2,REG_A2,REG_A5);
CBZ(REG_T2,".L1112"); //blocksizecode == 6
ADDI(REG_A5,REG_ZERO,7);
SUB(REG_T2,REG_A2,REG_A5);
CBNZ(REG_T2,".L1100"); //blocksizecode != 7
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_SP,10);
CALL("bitstream_alignread");
LBU(REG_S3,REG_SP,10);
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_SP,10);
CALL("bitstream_alignread");
LBU(REG_A5,REG_SP,10);
ADDI(REG_A5,REG_A5,9);
SLL(REG_S3,REG_S3,REG_A5);
B(".L192");
FLAG(".L1112");
ADD(REG_A1,REG_S1,REG_ZERO);
ADDI(REG_A0,REG_SP,10);
CALL("bitstream_alignread");
LBU(REG_S3,REG_SP,10);
ADDI(REG_S3,REG_S3,1);
B(".L192");
FLAG(".L199");
ADDI(REG_S3,REG_ZERO,192);
B(".L192");
FLAG(".L1111");
ADDI(REG_S0,REG_ZERO,-4);
B(".L188");
FLAG(".L197");
ADDI(REG_A5,REG_ZERO,10);
SUB(REG_T2,REG_S2,REG_A5);
CBNZ(REG_T2,".L1105");
ADDI(REG_S0,REG_ZERO,3);
B(".L196");
FLAG(".L1102");
ADDI(REG_S0,REG_ZERO,2);
B(".L196");
FLAG(".L1103");
ADDI(REG_S0,REG_ZERO,0);
B(".L196");
FLAG(".L198");
ADDI(REG_S0,REG_ZERO,-1);
B(".L188");
FLAG(".L1100");
ADDI(REG_S0,REG_ZERO,-2);
B(".L188");
FLAG(".L1101");
ADDI(REG_S0,REG_ZERO,-3);
B(".L188");
FLAG(".L1105");
ADDI(REG_S0,REG_ZERO,-4);
B(".L188");
FLAG(".L1106");
ADDI(REG_S0,REG_ZERO,-5);
B(".L188");
FLAG(".L1107");
ADDI(REG_S0,REG_ZERO,-6);
B(".L188");
FLAG(".L1108");
ADDI(REG_S0,REG_ZERO,-6);
B(".L188");

FLAG("main");
ADDI(REG_SP,REG_SP,-32);
SH(REG_RA,REG_SP,28);
ADD(REG_A1,REG_SP,REG_ZERO);
ADDI(REG_A0,REG_ZERO,0);//empty string of input file
CALL("bitstream_init");
FLAG(".L1114");
ADD(REG_A0,REG_SP,REG_ZERO);
CALL("decodeframe");
CBZ(REG_A0,".L1114");
//test only
CALL("flushcache");
WSRH(REG_A0,REG_ZERO,80);
WFI();
ADDI(REG_A0,REG_ZERO,0);
LH(REG_RA,REG_SP,28);
ADDI(REG_SP,REG_SP,32);
BR(REG_RA);
